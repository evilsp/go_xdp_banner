name: Publish Demo Docker image

on:
  push:
    paths:
      - test/demo/**
      - .gitea/workflows/build-demo.yaml

env:
  REGISTRY: reg.joshua.su:2

jobs:
  push_server_to_registry:
    name: Build and push Server Docker image
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: ${{ env.REGISTRY }}/xdp-banner/demo-server
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: test/demo/
          file: test/demo/deploy/server.Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:server-cache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:server-cache,image-manifest=true,oci-mediatypes=true,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_client_to_registry:
    name: Build and push Client Docker image
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: ${{ env.REGISTRY }}/xdp-banner/demo-client
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: test/demo/
          file: test/demo/deploy/client.Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:client-cache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:client-cache,image-manifest=true,oci-mediatypes=true,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}