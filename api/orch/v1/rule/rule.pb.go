// Use https://cloud.google.com/endpoints/docs/grpc-service-config/reference/rpc/google.api#google.api.HttpRule

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: rule.proto

package rule

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_PUT    EventType = 0
	EventType_DELETE EventType = 1
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "PUT",
		1: "DELETE",
	}
	EventType_value = map[string]int32{
		"PUT":    0,
		"DELETE": 1,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_rule_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_rule_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0}
}

// Add rule with Port
type AddRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rule          *structpb.Struct       `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRuleRequest) Reset() {
	*x = AddRuleRequest{}
	mi := &file_rule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRuleRequest) ProtoMessage() {}

func (x *AddRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRuleRequest.ProtoReflect.Descriptor instead.
func (*AddRuleRequest) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0}
}

func (x *AddRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddRuleRequest) GetRule() *structpb.Struct {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AddRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRuleResponse) Reset() {
	*x = AddRuleResponse{}
	mi := &file_rule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRuleResponse) ProtoMessage() {}

func (x *AddRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRuleResponse.ProtoReflect.Descriptor instead.
func (*AddRuleResponse) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{1}
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rule          *structpb.Struct       `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	mi := &file_rule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteRuleRequest) GetRule() *structpb.Struct {
	if x != nil {
		return x.Rule
	}
	return nil
}

type DeleteRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleResponse) Reset() {
	*x = DeleteRuleResponse{}
	mi := &file_rule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleResponse) ProtoMessage() {}

func (x *DeleteRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRuleResponse) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{3}
}

type UpdateRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rule          *structpb.Struct       `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	mi := &file_rule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRuleRequest) GetRule() *structpb.Struct {
	if x != nil {
		return x.Rule
	}
	return nil
}

type UpdateRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRuleResponse) Reset() {
	*x = UpdateRuleResponse{}
	mi := &file_rule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleResponse) ProtoMessage() {}

func (x *UpdateRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuleResponse) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{5}
}

type GetRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	mi := &file_rule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{6}
}

func (x *GetRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *structpb.Struct       `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleResponse) Reset() {
	*x = GetRuleResponse{}
	mi := &file_rule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleResponse) ProtoMessage() {}

func (x *GetRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleResponse.ProtoReflect.Descriptor instead.
func (*GetRuleResponse) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{7}
}

func (x *GetRuleResponse) GetRule() *structpb.Struct {
	if x != nil {
		return x.Rule
	}
	return nil
}

type ListRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagesize      int64                  `protobuf:"varint,1,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuleRequest) Reset() {
	*x = ListRuleRequest{}
	mi := &file_rule_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleRequest) ProtoMessage() {}

func (x *ListRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleRequest.ProtoReflect.Descriptor instead.
func (*ListRuleRequest) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{8}
}

func (x *ListRuleRequest) GetPagesize() int64 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *ListRuleRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type ListRuleResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Total         int64                       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage     int64                       `protobuf:"varint,2,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	CurrentPage   int64                       `protobuf:"varint,3,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	HasNext       bool                        `protobuf:"varint,4,opt,name=hasNext,proto3" json:"hasNext,omitempty"`
	NextCursor    string                      `protobuf:"bytes,5,opt,name=nextCursor,proto3" json:"nextCursor,omitempty"`
	Items         map[string]*structpb.Struct `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuleResponse) Reset() {
	*x = ListRuleResponse{}
	mi := &file_rule_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleResponse) ProtoMessage() {}

func (x *ListRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleResponse.ProtoReflect.Descriptor instead.
func (*ListRuleResponse) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{9}
}

func (x *ListRuleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRuleResponse) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *ListRuleResponse) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ListRuleResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *ListRuleResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListRuleResponse) GetItems() map[string]*structpb.Struct {
	if x != nil {
		return x.Items
	}
	return nil
}

type WatchRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleName      string                 `protobuf:"bytes,1,opt,name=ruleName,proto3" json:"ruleName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRuleRequest) Reset() {
	*x = WatchRuleRequest{}
	mi := &file_rule_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRuleRequest) ProtoMessage() {}

func (x *WatchRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRuleRequest.ProtoReflect.Descriptor instead.
func (*WatchRuleRequest) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{10}
}

func (x *WatchRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

type WatchRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleKey       string                 `protobuf:"bytes,1,opt,name=ruleKey,proto3" json:"ruleKey,omitempty"`
	RuleVal       *structpb.Struct       `protobuf:"bytes,2,opt,name=ruleVal,proto3" json:"ruleVal,omitempty"`
	EventType     EventType              `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=rule.EventType" json:"event_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRuleResponse) Reset() {
	*x = WatchRuleResponse{}
	mi := &file_rule_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRuleResponse) ProtoMessage() {}

func (x *WatchRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRuleResponse.ProtoReflect.Descriptor instead.
func (*WatchRuleResponse) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{11}
}

func (x *WatchRuleResponse) GetRuleKey() string {
	if x != nil {
		return x.RuleKey
	}
	return ""
}

func (x *WatchRuleResponse) GetRuleVal() *structpb.Struct {
	if x != nil {
		return x.RuleVal
	}
	return nil
}

func (x *WatchRuleResponse) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_PUT
}

var File_rule_proto protoreflect.FileDescriptor

const file_rule_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"rule.proto\x12\x04rule\x1a\x1cgoogle/protobuf/struct.proto\"Q\n" +
	"\x0eAddRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x04rule\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04rule\"\x11\n" +
	"\x0fAddRuleResponse\"T\n" +
	"\x11DeleteRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x04rule\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04rule\"\x14\n" +
	"\x12DeleteRuleResponse\"T\n" +
	"\x11UpdateRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x04rule\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04rule\"\x14\n" +
	"\x12UpdateRuleResponse\"$\n" +
	"\x0eGetRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\">\n" +
	"\x0fGetRuleResponse\x12+\n" +
	"\x04rule\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04rule\"E\n" +
	"\x0fListRuleRequest\x12\x1a\n" +
	"\bpagesize\x18\x01 \x01(\x03R\bpagesize\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\"\xae\x02\n" +
	"\x10ListRuleResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x1c\n" +
	"\ttotalPage\x18\x02 \x01(\x03R\ttotalPage\x12 \n" +
	"\vcurrentPage\x18\x03 \x01(\x03R\vcurrentPage\x12\x18\n" +
	"\ahasNext\x18\x04 \x01(\bR\ahasNext\x12\x1e\n" +
	"\n" +
	"nextCursor\x18\x05 \x01(\tR\n" +
	"nextCursor\x127\n" +
	"\x05items\x18\x06 \x03(\v2!.rule.ListRuleResponse.ItemsEntryR\x05items\x1aQ\n" +
	"\n" +
	"ItemsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05value:\x028\x01\".\n" +
	"\x10WatchRuleRequest\x12\x1a\n" +
	"\bruleName\x18\x01 \x01(\tR\bruleName\"\x90\x01\n" +
	"\x11WatchRuleResponse\x12\x18\n" +
	"\aruleKey\x18\x01 \x01(\tR\aruleKey\x121\n" +
	"\aruleVal\x18\x02 \x01(\v2\x17.google.protobuf.StructR\aruleVal\x12.\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2\x0f.rule.EventTypeR\teventType* \n" +
	"\tEventType\x12\a\n" +
	"\x03PUT\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x012\x83\x03\n" +
	"\vRuleService\x126\n" +
	"\aAddRule\x12\x14.rule.AddRuleRequest\x1a\x15.rule.AddRuleResponse\x12?\n" +
	"\n" +
	"DeleteRule\x12\x17.rule.DeleteRuleRequest\x1a\x18.rule.DeleteRuleResponse\x12?\n" +
	"\n" +
	"UpdateRule\x12\x17.rule.UpdateRuleRequest\x1a\x18.rule.UpdateRuleResponse\x126\n" +
	"\aGetRule\x12\x14.rule.GetRuleRequest\x1a\x15.rule.GetRuleResponse\x129\n" +
	"\bListRule\x12\x15.rule.ListRuleRequest\x1a\x16.rule.ListRuleResponse\x12G\n" +
	"\x12WatchRuleResources\x12\x16.rule.WatchRuleRequest\x1a\x17.rule.WatchRuleResponse0\x01B\x0eZ\forch/v1/ruleb\x06proto3"

var (
	file_rule_proto_rawDescOnce sync.Once
	file_rule_proto_rawDescData []byte
)

func file_rule_proto_rawDescGZIP() []byte {
	file_rule_proto_rawDescOnce.Do(func() {
		file_rule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rule_proto_rawDesc), len(file_rule_proto_rawDesc)))
	})
	return file_rule_proto_rawDescData
}

var file_rule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_rule_proto_goTypes = []any{
	(EventType)(0),             // 0: rule.EventType
	(*AddRuleRequest)(nil),     // 1: rule.AddRuleRequest
	(*AddRuleResponse)(nil),    // 2: rule.AddRuleResponse
	(*DeleteRuleRequest)(nil),  // 3: rule.DeleteRuleRequest
	(*DeleteRuleResponse)(nil), // 4: rule.DeleteRuleResponse
	(*UpdateRuleRequest)(nil),  // 5: rule.UpdateRuleRequest
	(*UpdateRuleResponse)(nil), // 6: rule.UpdateRuleResponse
	(*GetRuleRequest)(nil),     // 7: rule.GetRuleRequest
	(*GetRuleResponse)(nil),    // 8: rule.GetRuleResponse
	(*ListRuleRequest)(nil),    // 9: rule.ListRuleRequest
	(*ListRuleResponse)(nil),   // 10: rule.ListRuleResponse
	(*WatchRuleRequest)(nil),   // 11: rule.WatchRuleRequest
	(*WatchRuleResponse)(nil),  // 12: rule.WatchRuleResponse
	nil,                        // 13: rule.ListRuleResponse.ItemsEntry
	(*structpb.Struct)(nil),    // 14: google.protobuf.Struct
}
var file_rule_proto_depIdxs = []int32{
	14, // 0: rule.AddRuleRequest.rule:type_name -> google.protobuf.Struct
	14, // 1: rule.DeleteRuleRequest.rule:type_name -> google.protobuf.Struct
	14, // 2: rule.UpdateRuleRequest.rule:type_name -> google.protobuf.Struct
	14, // 3: rule.GetRuleResponse.rule:type_name -> google.protobuf.Struct
	13, // 4: rule.ListRuleResponse.items:type_name -> rule.ListRuleResponse.ItemsEntry
	14, // 5: rule.WatchRuleResponse.ruleVal:type_name -> google.protobuf.Struct
	0,  // 6: rule.WatchRuleResponse.event_type:type_name -> rule.EventType
	14, // 7: rule.ListRuleResponse.ItemsEntry.value:type_name -> google.protobuf.Struct
	1,  // 8: rule.RuleService.AddRule:input_type -> rule.AddRuleRequest
	3,  // 9: rule.RuleService.DeleteRule:input_type -> rule.DeleteRuleRequest
	5,  // 10: rule.RuleService.UpdateRule:input_type -> rule.UpdateRuleRequest
	7,  // 11: rule.RuleService.GetRule:input_type -> rule.GetRuleRequest
	9,  // 12: rule.RuleService.ListRule:input_type -> rule.ListRuleRequest
	11, // 13: rule.RuleService.WatchRuleResources:input_type -> rule.WatchRuleRequest
	2,  // 14: rule.RuleService.AddRule:output_type -> rule.AddRuleResponse
	4,  // 15: rule.RuleService.DeleteRule:output_type -> rule.DeleteRuleResponse
	6,  // 16: rule.RuleService.UpdateRule:output_type -> rule.UpdateRuleResponse
	8,  // 17: rule.RuleService.GetRule:output_type -> rule.GetRuleResponse
	10, // 18: rule.RuleService.ListRule:output_type -> rule.ListRuleResponse
	12, // 19: rule.RuleService.WatchRuleResources:output_type -> rule.WatchRuleResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_rule_proto_init() }
func file_rule_proto_init() {
	if File_rule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rule_proto_rawDesc), len(file_rule_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rule_proto_goTypes,
		DependencyIndexes: file_rule_proto_depIdxs,
		EnumInfos:         file_rule_proto_enumTypes,
		MessageInfos:      file_rule_proto_msgTypes,
	}.Build()
	File_rule_proto = out.File
	file_rule_proto_goTypes = nil
	file_rule_proto_depIdxs = nil
}
